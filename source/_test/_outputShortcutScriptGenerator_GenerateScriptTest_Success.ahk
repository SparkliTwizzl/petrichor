; Generated by Petrichor v0.8-dev AutoHotkey shortcut script generator
; https://github.com/SparkliTtwizzl/petrichor


#Requires AutoHotkey v2.0
#SingleInstance Force

defaultIcon := "Z:\shared-repos\github\sparklitwizzl\petrichor\source\_build\ShortcutScriptGenerationTests\bin\Debug\..\..\..\..\_test\_input\IconDefault.ico"
suspendIcon := "Z:\shared-repos\github\sparklitwizzl\petrichor\source\_build\ShortcutScriptGenerationTests\bin\Debug\..\..\..\..\_test\_input\IconSuspend.ico"


; constants used for icon handling
FREEZE_ICON := true
ID_FILE_SUSPEND := 65305
ID_TRAY_SUSPEND := 65404
SUSPEND_OFF := 0
SUSPEND_ON := 1
SUSPEND_TOGGLE := -1
WM_COMMAND := 0x111


; icon handling
; based on code by ntepa on autohotkey.com/boards: https://www.autohotkey.com/boards/viewtopic.php?p=497349#p497349
SuspendC := Suspend.GetMethod( "Call" )
Suspend.DefineProp( "Call",
	{
		Call:( this, mode := SUSPEND_TOGGLE ) => ( SuspendC( this, mode ), OnSuspend( A_IsSuspended ) )
	})
OnMessage( WM_COMMAND, OnSuspendMsg )
OnSuspendMsg( wparam, * )
{
	if ( wparam = ID_FILE_SUSPEND ) || ( wparam = ID_TRAY_SUSPEND )
	{
		OnSuspend( !A_IsSuspended )
	}
}

OnSuspend( mode )
{
	scriptIcon := SelectIcon( mode )
	SetIcon( scriptIcon )
}

SelectIcon( suspendMode )
{
	if ( suspendMode = SUSPEND_ON )
	{
		return suspendIcon
	}
	else if ( suspendMode = SUSPEND_OFF )
	{
		return defaultIcon
	}
	return ""
}

SetIcon( scriptIcon )
{
	if ( FileExist( scriptIcon ) )
	{
		TraySetIcon( scriptIcon,, FREEZE_ICON )
	}
}

SetIcon( defaultIcon )


; script reload / suspend shortcut(s)
#SuspendExempt true
#r::Reload()
#s::Suspend( SUSPEND_TOGGLE )
#SuspendExempt false


; macros generated from entries and templates
::@tag:: name
::@$&tag:: name pronoun decoration
